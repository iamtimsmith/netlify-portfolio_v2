{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/Forms.js"],"names":["AboutPage","data","title","url","description","markdownRemark","frontmatter","keywords","className","sizes","profile_pic","childImageSharp","alt","dangerouslySetInnerHTML","__html","html","query","ContactForm","props","state","submitted","response","type","message","name","email","botfield","onChange","bind","onSubmit","e","this","setState","target","value","setTimeout","document","querySelector","reset","render","method","id","data-netlify","data-netlify-honeypot","placeholder","onClick","Component"],"mappings":"0FAAA,8GAkCeA,UA3BG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,QACNC,IAAI,SACJC,YAAaH,EAAKI,eAAeC,YAAYF,YAC7CG,SAAUN,EAAKI,eAAeC,YAAYC,WAE5C,yBAAKC,UAAU,SACb,4BAAQA,UAAU,gBAChB,kBAAC,IAAD,CACEC,MACER,EAAKI,eAAeC,YAAYI,YAAYC,gBAAgBF,MAE9DG,IAAI,eAGR,yBACEJ,UAAU,cACVK,wBAAyB,CAAEC,OAAQb,EAAKI,eAAeU,QAEzD,yBAAKP,UAAU,eACb,kBAAC,IAAD,UAOD,IAAMQ,EAAK,c,wNClCX,IAAMC,EAAb,Y,QACE,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,WAAW,EACXC,SAAU,CAAEC,KAAK,GAAKC,QAAQ,WAC9BC,KAAK,GACLC,MAAM,GACNF,QAAQ,GACRG,SAAS,IAEX,EAAKC,SAAW,EAAKA,SAASC,KAAd,MAChB,EAAKC,SAAW,EAAKA,SAASD,KAAd,MAXC,E,EADrB,G,EAAA,G,6EAAA,2BAeED,SAAA,SAASG,GAAI,IAAD,EACVC,KAAKC,WAAL,MACGF,EAAEG,OAAOT,MAAOM,EAAEG,OAAOC,MAD5B,KAhBJ,EAqBEL,SAAA,WAAY,IAAD,SACwBE,KAAKZ,MAA9BK,EADC,EACDA,KAAMC,EADL,EACKA,MAAOF,EADZ,EACYA,QACrBY,YAAW,WAELX,GAAQC,GAASF,GAEnBa,SAASC,cAAc,uBAAuBC,QAE9C,EAAKN,SAAS,CACZZ,WAAW,EACXC,SAAU,CAAEC,KAAK,WAAaC,QAAQ,0EACtCC,KAAK,GACLC,MAAM,GACNF,QAAQ,MAIV,EAAKS,SAAS,CACZZ,WAAW,EACXC,SAAU,CAAEC,KAAK,SAAWC,QAAQ,kEAGvC,MA3CP,EA8CEgB,OAAA,WAAU,IAAD,OACClB,EAAaU,KAAKZ,MAAlBE,SACR,OACE,yBAAKb,UAAU,gBACb,4BAAQgB,KAAK,OAAOtB,MAAM,SAASM,UAAU,yBAC7C,0BACEA,UAAU,qBACVgB,KAAK,UACLS,OAAO,OACPO,OAAO,OACPC,GAAG,UACHC,eAAa,OACbC,wBAAsB,aACtB,uBAAGnC,UAAS,yBAA2Ba,EAASC,MAASD,EAASE,SAClE,2BAAOf,UAAU,uBAAuBc,KAAK,SAASE,KAAK,aAC3D,2BAAOhB,UAAU,qBAAqBc,KAAK,OAAOE,KAAK,OAAOoB,YAAY,OAAOjB,SAAU,SAAAG,GAAC,OAAI,EAAKH,SAASG,MAC9G,2BAAOtB,UAAU,sBAAsBc,KAAK,OAAOE,KAAK,QAAQoB,YAAY,QAAQjB,SAAU,SAAAG,GAAC,OAAI,EAAKH,SAASG,MACjH,8BAAUtB,UAAU,wBAAwBgB,KAAK,UAAUoB,YAAY,eAAejB,SAAU,SAAAG,GAAC,OAAI,EAAKH,SAASG,MACnH,2BAAOtB,UAAU,uBAAuBc,KAAK,SAASE,KAAK,SAASU,MAAM,WAAWW,QAAS,kBAAM,EAAKhB,iBAhEnH,GAAiCiB","file":"component---src-pages-about-js-a20b495b679f8b6f412e.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { ContactForm } from '../components/Forms'\n\nconst AboutPage = ({ data }) => (\n  <Layout>\n    <SEO\n      title=\"About\"\n      url=\"/about\"\n      description={data.markdownRemark.frontmatter.description}\n      keywords={data.markdownRemark.frontmatter.keywords} />\n\n    <div className=\"about\">\n      <figure className=\"about__image\">\n        <Img\n          sizes={\n            data.markdownRemark.frontmatter.profile_pic.childImageSharp.sizes\n          }\n          alt=\"Tim Smith\"\n        />\n      </figure>\n      <div\n        className='about__text'\n        dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }}\n      />\n      <div className=\"about__form\">\n        <ContactForm />\n      </div>\n    </div>\n  </Layout>\n)\nexport default AboutPage\n\nexport const query = graphql`\n  query {\n    markdownRemark(frontmatter: { title: { eq: \"About\" } }) {\n      frontmatter {\n        title\n        description\n        keywords\n        profile_pic {\n          childImageSharp {\n            sizes(maxWidth: 200) {\n              ...GatsbyImageSharpSizes\n            }\n          }\n        }\n      }\n      html\n    }\n  }\n`\n","import React, { Component } from 'react'\n\nexport class ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitted: false,\n      response: { type: ``, message: `message` },\n      name: ``,\n      email: ``,\n      message: ``,\n      botfield: ``,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit() {\n    const { name, email, message } = this.state;\n    setTimeout(() => {\n      // Check to make sure fields aren't empty\n      if (name && email && message) {\n        // Clear the form if submitted\n        document.querySelector('.contact-form__form').reset()\n        // Set submitted to true and provide message to user\n        this.setState({\n          submitted: true,\n          response: { type: `-success`, message: `Thanks for reaching out to me. I'll be in contact as soon as possible!` },\n          name: ``,\n          email: ``,\n          message: ``\n        });\n      } else {\n        // If error, provide error message to user.\n        this.setState({\n          submitted: true,\n          response: { type: `-error`, message: `You need to fill out all of the fields to submit the form!` }\n        })\n      }\n    }, 1000);\n  }\n\n  render() {\n    const { response } = this.state;\n    return (\n      <div className='contact-form'>\n        <iframe name=\"hide\" title=\"hidden\" className=\"contact-form__hidden\" />\n        <form\n          className='contact-form__form'\n          name='contact'\n          target='hide'\n          method='POST'\n          id='contact'\n          data-netlify='true'\n          data-netlify-honeypot='bot-field'>\n          <p className={`contact-form__response${response.type}`}>{response.message}</p>\n          <input className='contact-form__hidden' type=\"hidden\" name='botfield' />\n          <input className='contact-form__name' type=\"text\" name=\"name\" placeholder=\"Name\" onChange={e => this.onChange(e)} />\n          <input className='contact-form__email' type=\"text\" name=\"email\" placeholder=\"Email\" onChange={e => this.onChange(e)} />\n          <textarea className='contact-form__message' name=\"message\" placeholder=\"Your Message\" onChange={e => this.onChange(e)} />\n          <input className='contact-form__submit' type=\"submit\" name=\"submit\" value='Hire Me!' onClick={() => this.onSubmit()}\n          />\n        </form>\n      </div>\n    )\n  }\n}"],"sourceRoot":""}