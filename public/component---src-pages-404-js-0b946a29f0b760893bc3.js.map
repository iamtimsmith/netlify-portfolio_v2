{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/BlogSummary.js","webpack:///./src/components/RecentPosts.js"],"names":["NotFoundPage","data","location","className","title","Summary","description","path","thumb","tags","to","sizes","map","tag","key","currentPost","query","render","posts","allMarkdownRemark","edges","filter","node","fields","slug","length","pop","frontmatter","featured_image","childImageSharp","split"],"mappings":"0FAAA,sDAmBeA,UAdM,SAAC,GAAD,EAAGC,KAAH,OACnB,kBAAC,IAAD,CAAQC,SAAS,OACf,6BAASC,UAAU,uCACjB,kBAAC,IAAD,CAAKC,MAAM,mBACX,yCACA,kJAKF,kBAAC,IAAD,S,iCCfJ,8CAuBeC,IAnBC,SAAC,GAAD,QAAGC,mBAAH,MAAiB,GAAjB,EAAqBC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,MAAOJ,EAAlC,EAAkCA,MAAOK,EAAzC,EAAyCA,KAAzC,IAA+CN,iBAA/C,MAA2D,YAA3D,SACd,kBAAC,OAAD,CAAMO,GAAIH,EAAMJ,UAAWA,GACzB,6BAASA,UAAcA,EAAL,eAChB,yBAAKA,UAAcA,EAAL,WACZ,kBAAC,IAAD,CAAKQ,MAAOH,KAEd,yBAAKL,UAAcA,EAAL,aACZ,wBAAIA,UAAcA,EAAL,WAA0BC,GACvC,yBAAKD,UAAcA,EAAL,iBAAgCG,GAC7CG,EAAKG,KAAI,SAAAC,GAAG,OACX,0BAAMV,UAAcA,EAAL,QAAuBW,IAAKD,GACxCA,W,qFCXE,wBAAGE,mBAAH,MAAiB,GAAjB,SACb,kBAAC,cAAD,CACEC,MAAK,aA6BLC,OAAQ,SAAAhB,GACN,IAAMiB,EAAQjB,EAAKkB,kBAAkBC,MAAMC,QAAO,qBAAGC,KAAgBC,OAAOC,OAAST,KAKrF,OAJIG,EAAMO,OAAS,GACjBP,EAAMQ,MAIN,yBAAKvB,UAAU,0BACb,uBAAGA,UAAU,uBAAb,cACA,yBAAKA,UAAU,uBACZe,EAAMN,KAAI,gBAAGU,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CACEf,KAAMe,EAAKC,OAAOC,KAClBhB,MAAOc,EAAKK,YAAYC,eAAeC,gBAAgBlB,MACvDP,MAAOkB,EAAKK,YAAYvB,MACxBE,YAAagB,EAAKK,YAAYrB,YAC9BG,KAAMa,EAAKK,YAAYlB,KAAKqB,MAAM,KAClChB,IAAKQ,EAAKC,OAAOC,aA/C/B,W","file":"component---src-pages-404-js-0b946a29f0b760893bc3.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport RecentPosts from '../components/RecentPosts';\n\nconst NotFoundPage = ({ data }) => (\n  <Layout location=\"404\">\n    <section className=\"section is-medium has-text-centered\">\n      <SEO title=\"404: Not found\" />\n      <h1>NOT FOUND</h1>\n      <p>\n        I'm afraid the page you're looking for isn't available. Here are some\n        blog posts that might interest you though...\n      </p>\n    </section>\n    <RecentPosts />\n  </Layout>\n)\n\nexport default NotFoundPage","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst Summary = ({ description = \"\", path, thumb, title, tags, className = \"post-card\" }) => (\n  <Link to={path} className={className}>\n    <article className={`${className}__container`}>\n      <div className={`${className}__image`}>\n        <Img sizes={thumb} />\n      </div>\n      <div className={`${className}__content`}>\n        <h4 className={`${className}__title`}>{title}</h4>\n        <div className={`${className}__description`}>{description}</div>\n        {tags.map(tag => (\n          <span className={`${className}__tag`} key={tag}>\n            {tag}\n          </span>\n        ))}\n      </div>\n    </article>\n  </Link>\n)\n\nexport default Summary\n","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby';\nimport Summary from './BlogSummary';\n\nexport default ({ currentPost = \"\" }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMarkdownRemark(\n          filter:{fields:{type:{eq:\"posts\"}}, frontmatter:{published:{eq:true}}},\n          limit:4,\n          sort: {fields:frontmatter___date, order: DESC}\n        ) {\n          edges {\n            node {\n              frontmatter {\n                title\n                featured_image {\n                  childImageSharp {\n                    sizes(maxWidth: 400) {\n                      ...GatsbyImageSharpSizes\n                    }\n                  }\n                }\n                description\n                tags\n              }\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const posts = data.allMarkdownRemark.edges.filter(({ node }) => node.fields.slug !== currentPost);\n      if (posts.length > 3) {\n        posts.pop();\n      }\n\n      return (\n        <div className=\"container recent-posts\">\n          <p className=\"recent-posts__title\">More Posts</p>\n          <div className=\"recent-posts__posts\">\n            {posts.map(({ node }) => (\n              <Summary\n                path={node.fields.slug}\n                thumb={node.frontmatter.featured_image.childImageSharp.sizes}\n                title={node.frontmatter.title}\n                description={node.frontmatter.description}\n                tags={node.frontmatter.tags.split(' ')}\n                key={node.fields.slug} />\n            ))}\n          </div>\n        </div>\n      )\n    }\n    }\n  />\n)"],"sourceRoot":""}